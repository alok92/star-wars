{"version":3,"sources":["components/Utils/planetDetail.js","components/searchPlanet.js","components/login.js","components/app.js","index.js"],"names":["Planet","props","undefined","detail","className","id","name","climate","rotation_period","diameter","gravity","terrain","surface_water","population","SearchPlanet","state","term","suggestions","SearchStatus","onTextChange","e","a","value","target","length","axios","get","then","response","data","results","setState","planetsFromList","map","regex","RegExp","sort","filter","v","test","suggestionSelected","planetName","planetDetails","renderSuggestions","planet","onClick","find","o","refreshPage","window","location","reload","this","user","onSubmit","preventDefault","onChange","placeholder","type","Component","Login","clientUser","clientPass","backendUser","backendPass","loginSuccess","loginFailure","OnSubmitClick","UClient","result","people","birth_year","catch","err","console","error","trim","UBackend","PBackend","PClient","log","CheckAuthentication","UserName","Password","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a1cd732.chunk.js","sourcesContent":["import React from 'react';\nimport './planetDetail.css'\n\nconst Planet = (props) => {\n\n       if (props.detail === undefined) {\n              return <div> No result Found </div>\n\n       } return <div className='container-fluid text-center'>\n              <h1 className='planetInfo'>Planet Info</h1>\n              <table id=\"planets\">\n                     <tbody>\n                            <tr>\n                                   <th>Planet Name</th>\n                                   <td>{props.detail.name}</td>\n                            </tr>\n                            <tr>\n                                   <th>Climate</th>\n                                   <td>{props.detail.climate}</td>\n                            </tr>\n                            <tr>\n                                   <th>Rotation Period</th>\n                                   <td>{props.detail.rotation_period}</td>\n                            </tr>\n                            <tr>\n                                   <th>Diameter</th>\n                                   <td>{props.detail.diameter}</td>\n                            </tr>\n                            <tr>\n                                   <th>Gravity</th>\n                                   <td>{props.detail.gravity}</td>\n                            </tr>\n                            <tr>\n                                   <th>Terrain</th>\n                                   <td>{props.detail.terrain}</td>\n                            </tr>\n                            <tr>\n                                   <th>Surface Water</th>\n                                   <td>{props.detail.surface_water}</td>\n                            </tr>\n                            <tr>\n                                   <th>Population</th>\n                                   <td>{props.detail.population}</td>\n                            </tr>\n                     </tbody>\n              </table>\n       </div>\n}\nexport default Planet\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport './searchPlanet.css'\nimport './Utils/typeAheadDropdown.css'\nimport Planet from './Utils/planetDetail'\n\n\nclass SearchPlanet extends Component {\n\n  state = {\n    term: '',\n    Planet: '',\n    suggestions: [],\n    SearchStatus: false\n  }\n\n  onTextChange = async (e) => {\n    let suggestions = [];\n    const value = e.target.value;\n\n    if (value.length > 0) {\n      await axios.get(`https://swapi.dev/api/planets/?search=${value}`)\n        .then((response) => {\n          response = response.data.results;\n          this.setState({\n            Planet: response\n          })\n          const planetsFromList = response.map(value => value.name);\n          const regex = new RegExp(`^${value}`, `i`);\n          suggestions = planetsFromList.sort().filter(v => regex.test(v));\n        });\n    }\n    this.setState(() => ({\n      suggestions,\n      term: value\n    }));\n  }\n\n  suggestionSelected = (planetName, planetDetails) => {\n    this.setState(() => ({\n      term: planetName,\n      suggestions: [],\n      Planet: planetDetails\n    }))\n  }\n\n  renderSuggestions = () => {\n    const { suggestions, Planet } = this.state;\n     if (suggestions.length === 0) {\n      return null;\n    }\n    return (\n      <ul>\n        {suggestions.map(planet => <li key={planet} onClick={(e) => this.suggestionSelected(planet, Planet.find(o => o.name === planet))}>{planet}</li>)}\n      </ul>\n    )\n  }\n\n  refreshPage = () => {\n    window.location.reload();\n  }\n\n  render() {\n    return <div className='container-fluid text-center b3  '>\n      <div className='b7'>\n        <span className='b6 '>Star Wars Planets </span>\n        <div className='float-right  b1'>\n          <span className='b4'>Welcome {this.props.user[0]}</span>\n          <button className='b5 btn btn-sm' onClick={this.refreshPage}>Logout</button>\n        </div>\n      </div>\n\n      <form onSubmit={e => e.preventDefault()} className='text-center'>\n        <div className=\"TypeAheadDropDown\">\n          <input onChange={this.onTextChange} placeholder=\"Search Planet Name\" value={this.state.term} type=\"text\" />\n          {this.renderSuggestions()}\n        </div>\n      </form>\n\n      <div className='b9'>\n        {this.state.SearchStatus}\n      </div>\n\n      <div className='container-fluid b10'>\n        <Planet detail={this.state.Planet} />\n      </div>\n    </div>\n  }\n\n}\nexport default SearchPlanet\n","import React, { Component } from 'react';\nimport './login.css'\nimport axios from 'axios'\nimport SearchBar from './searchPlanet'\n\n\nclass Login extends Component {\n\n  state = {\n\n    clientUser: '',\n    clientPass: '',\n    backendUser: '',\n    backendPass: '',\n    loginSuccess: false,\n    loginFailure: false\n\n  }\n\n\n  OnSubmitClick = async () => {\n    const UClient = this.state.clientUser\n\n    await axios.get(`https://swapi.dev/api/people/?search=${UClient}`)\n      .then(result => this.setState({\n        backendUser: result.data.results.map((people) => people.name),\n        backendPass: result.data.results.map((people) => people.birth_year)\n      }))\n      .catch(err => console.error(err))\n\n    const CheckAuthentication = async () => {\n      const UClient = this.state.clientUser.trim();\n      const UBackend = this.state.backendUser[0];\n      const PBackend = this.state.backendPass[0];\n      const PClient = this.state.clientPass.trim();\n\n      if (PBackend === PClient && UBackend === UClient) {\n        console.log('Successfully Login')\n        this.setState({\n          loginSuccess: 'Successfully Login', loginFailure: false\n        })\n      } else if (UClient === '' || PClient === '') {\n        console.log('Username or password cannot be empty')\n        this.setState({ loginFailure: 'Username or password cannot be empty'})\n      }\n      else {\n        console.log('Invalid Username or Password')\n        this.setState({ loginFailure: 'Invalid Username or Password' })\n      }\n    }\n    CheckAuthentication()\n\n  }\n\n\n  render() {\n\n    if (this.state.loginSuccess) {\n      return <div >\n        <SearchBar user={this.state.backendUser} />\n      </div>\n    } else {\n      return <div className='container text-center shadow a5'>\n\n        <h1 className='a1'>STAR WARS</h1>\n\n        <div className='container text-center'>\n          <form onSubmit={(e) => e.preventDefault()}>\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <label className='a2'>User Name: </label>\n                  </td>\n                  <td>\n                    <input\n                      onChange={e => this.setState({ clientUser: e.target.value })}\n                      value={this.state.UserName}\n                      placeholder='Enter Username'\n                      className='a3 text-center' />\n                  </td>\n\n                </tr>\n                <tr>\n                  <td>\n                    <label className='a2'>Password: </label>\n                  </td>\n                  <td>\n                    <input\n                      onChange={(e) => this.setState({ clientPass: e.target.value })}\n                      type='password'\n                      value={this.state.Password}\n                      placeholder='Enter Password'\n                      className='a3 text-center' />\n                  </td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>\n                    <button className='a4' onClick={this.OnSubmitClick}>Submit</button>\n                  </td>\n\n                </tr>\n              </tbody>\n            </table>\n          </form>\n        </div>\n        <div className='a6'>{this.state.loginFailure}</div>\n\n      </div>\n    }\n  }\n}\nexport default Login;\n","import React from 'react';\nimport Login from './login'\n\n\n\nconst App = () => {\n  return <div className='container'>\n    <Login />\n  </div>\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}